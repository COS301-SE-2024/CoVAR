name: Cypress E2E Tests
on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  e2e-tests:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Compose
        uses: docker/setup-buildx-action@v2

      - name: Create .env file
        run: |
          echo PG_USER=${{ secrets.PG_USER }} >> .env
          echo PG_HOST=${{ secrets.PG_HOST }} >> .env
          echo PG_DATABASE=${{ secrets.PG_DATABASE }} >> .env
          echo PG_PASSWORD=${{ secrets.PG_PASSWORD }} >> .env
          echo PG_PORT=${{ secrets.PG_PORT }} >> .env
          echo JSON_SECRET=${{ secrets.JSON_SECRET }} >> .env
          echo REFRESH_SECRET=${{ secrets.REFRESH_SECRET }} >> .env
          echo REACT_APP_API_KEY=${{ secrets.REACT_APP_API_KEY }} >> .env
          echo REACT_APP_AUTH_DOMAIN=${{ secrets.REACT_APP_AUTH_DOMAIN }} >> .env
          echo REACT_APP_PROJECT_ID=${{ secrets.REACT_APP_PROJECT_ID }} >> .env
          echo REACT_APP_STORAGE_BUCKET=${{ secrets.REACT_APP_STORAGE_BUCKET }} >> .env
          echo REACT_APP_MESSAGING_SENDER_ID=${{ secrets.REACT_APP_MESSAGING_SENDER_ID }} >> .env
          echo REACT_APP_APP_ID=${{ secrets.REACT_APP_APP_ID }} >> .env
          echo REACT_APP_MEASUREMENT_ID=${{ secrets.REACT_APP_MEASUREMENT_ID }} >> .env

      - name: create-json
        id: create-json
        uses: jsdaniell/create-json@1.1.2
        with:
          name: "server/covar-7c8b5-firebase-adminsdk-85918-b6654147c1.json"
          json: ${{ secrets.FIREBASE_SDK }}

      - name: Create DB Schema
        run: |
          echo ${{ secrets.SCHEMA }} > schema.sql

      - name: Create Pem Files
        run: |
          echo ${{ secrets.PUBLIC }} > server/public.pem
          echo ${{ secrets.PRIVATE }} > server/private.pem
          echo ${{ secrets.REFRESH_PUBLIC }} > server/refreshPublic.pem
          echo ${{ secrets.REFRESH_PRIVATE }} > server/refreshPrivate.pem
          
      - name: Clean up any existing Docker containers and networks
        run: |
          docker-compose down || true
          docker container prune -f
          docker network prune -f

      - name: Build and run Docker Compose services
        run: docker-compose up --build -d

      - name: Wait for services to be ready
        run: |
          echo "Waiting for services to be ready..."
          sleep 20

      - name: Run Cypress tests
        run: docker run --network host -v $PWD/CoVAR-app:/CoVAR-app -w /CoVAR-app cypress/included:13.11.0 --config-file cypress.config.js

      - name: Shut down Docker Compose services
        run: docker-compose down