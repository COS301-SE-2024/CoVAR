name: Cypress E2E Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  e2e-tests:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: ${{ secrets.PG_USER }}
          POSTGRES_PASSWORD: ${{ secrets.PG_PASSWORD }}
          POSTGRES_DB: ${{ secrets.PG_DATABASE }}
        ports:
          - 5555:5432
        options: >-
          --health-cmd="pg_isready"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

      nginx:
        image: nginx:latest
        ports:
          - 3050:80
        options: >-
          --health-cmd="curl -f http://localhost/ || exit 1"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: List files in the root directory
        run: ls -al

      - name: List files in the CoVAR-app directory
        run: ls -al ./CoVAR-app

      - name: Set up Docker Compose
        uses: docker/setup-buildx-action@v2

      - name: Make wait-for-it.sh executable
        run: chmod +x ./wait-for-it.sh

      - name: Create .env file
        run: |
          echo PG_USER=${{ secrets.PG_USER }} >> .env
          echo PG_HOST=${{ secrets.PG_HOST }} >> .env
          echo PG_DATABASE=${{ secrets.PG_DATABASE }} >> .env
          echo PG_PASSWORD=${{ secrets.PG_PASSWORD }} >> .env
          echo PG_PORT=${{ secrets.PG_PORT }} >> .env
          echo JSON_SECRET=${{ secrets.JSON_SECRET }} >> .env
          echo REFRESH_SECRET=${{ secrets.REFRESH_SECRET }} >> .env
          echo REACT_APP_API_KEY=${{ secrets.REACT_APP_API_KEY }} >> .env
          echo REACT_APP_AUTH_DOMAIN=${{ secrets.REACT_APP_AUTH_DOMAIN }} >> .env
          echo REACT_APP_PROJECT_ID=${{ secrets.REACT_APP_PROJECT_ID }} >> .env
          echo REACT_APP_STORAGE_BUCKET=${{ secrets.REACT_APP_STORAGE_BUCKET }} >> .env
          echo REACT_APP_MESSAGING_SENDER_ID=${{ secrets.REACT_APP_MESSAGING_SENDER_ID }} >> .env
          echo REACT_APP_APP_ID=${{ secrets.REACT_APP_APP_ID }} >> .env
          echo REACT_APP_MEASUREMENT_ID=${{ secrets.REACT_APP_MEASUREMENT_ID }} >> .env

      - name: Build and run Docker Compose services
        run: docker-compose up --build -d

      - name: Wait for services to be ready
        run: |
          ./wait-for-it.sh nginx:3050 -t 60
          ./wait-for-it.sh postgres:5555 -t 60
          ./wait-for-it.sh api:5000 -t 60
          ./wait-for-it.sh client:3000 -t 60

      - name: Install Cypress dependencies
        run: npm ci
        working-directory: ./CoVAR-app

      - name: Run Cypress tests
        run: npm run cypress:run
        working-directory: ./CoVAR-app

      - name: Shut down Docker Compose services
        run: docker-compose down
