version: '3'
services:
  postgres:
    image: 'postgres:latest'
    environment:
      - POSTGRES_PASSWORD=${PG_PASSWORD}
      - POSTGRES_USER=${PG_USER}
      - POSTGRES_DB=${PG_DATABASE}
    ports:
      - "5555:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./schema.sql:/docker-entrypoint-initdb.d/schema.sql

  nginx:
    depends_on:
      - api
      - client
    restart: always
    build:
      dockerfile: Dockerfile.dev
      context: './nginx'
    ports:
      - '3050:80'

  api:
    build:
      dockerfile: Dockerfile.dev
      context: './server'
    volumes:
      - /app/node_modules
      - ./server:/app
    environment:
      - PG_USER=${PG_USER}
      - PG_HOST=${PG_HOST}
      - PG_DATABASE=${PG_DATABASE}
      - PG_PASSWORD=${PG_PASSWORD}
      - PG_PORT=${PG_PORT}
      - JSON_SECRET=${JSON_SECRET}
      - REFRESH_SECRET=${REFRESH_SECRET}
    depends_on:
      - postgres
      - langchain

  client:
    stdin_open: true
    build:
      dockerfile: Dockerfile.dev
      context: './CoVAR-app'
    environment:
      - NEXT_PUBLIC_API_KEY=${NEXT_PUBLIC_API_KEY}
      - NEXT_PUBLIC_AUTH_DOMAIN=${NEXT_PUBLIC_AUTH_DOMAIN}
      - NEXT_PUBLIC_PROJECT_ID=${NEXT_PUBLIC_PROJECT_ID}
      - NEXT_PUBLIC_STORAGE_BUCKET=${NEXT_PUBLIC_STORAGE_BUCKET}
      - NEXT_PUBLIC_MESSAGING_SENDER_ID=${NEXT_PUBLIC_MESSAGING_SENDER_ID}
      - NEXT_PUBLIC_APP_ID=${NEXT_PUBLIC_APP_ID}
      - NEXT_PUBLIC_MEASUREMENT_ID=${NEXT_PUBLIC_MEASUREMENT_ID}
    volumes:
      - /app/node_modules
      - ./CoVAR-app:/app

  langchain:
    build:
      dockerfile: Dockerfile.dev
      context: './langchain'
    environment:
      - PG_USER=${PG_USER}
      - PG_HOST=${PG_HOST}
      - PG_DATABASE=${PG_DATABASE}
      - PG_PASSWORD=${PG_PASSWORD}
      - PG_PORT=${PG_PORT}
      - FLASK_ENV=development
    ports:
      - "6000:6000"
    volumes:
      - /app/node_modules
      - ./langchain:/app
    depends_on:
      - postgres

volumes:
  postgres_data:
    driver: local
